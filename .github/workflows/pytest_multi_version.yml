name: Run tests

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Run in all these versions of Python
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10']

    steps:

      # Checkout the latest code from the repo
      - name: Checkout repo
        uses: actions/checkout@v2

      # Set .pytest_env for set config
      - name: Create .pytest_env
        env:
          PYTEST_ENV: .pytest_env
        run: |
          touch $PYTEST_ENV
          echo BES_PYTEST_CLIENT_ID: ${{ secrets.BES_PYTEST_CLIENT_ID }} >> $PYTEST_ENV
          echo BES_PYTEST_CLIENT_SECRET: ${{ secrets.BES_PYTEST_CLIENT_SECRET }} >> $PYTEST_ENV
          echo BES_PYTEST_PASSWORD: ${{ secrets.BES_PYTEST_PASSWORD }} >> $PYTEST_ENV
          echo BES_PYTEST_USERNAME: ${{ secrets.BES_PYTEST_USERNAME }} >> $PYTEST_ENV
          cat $PYTEST_ENV

        # Setup which version of Python to use
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
        # Install the package using the setup.py
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev
      - name: Run test suite
        run: |
          pipenv run test